

bit32 = {};
local N = 32;
local P = 2 ^ N;
bit32.bnot = function(x)
	x = x % P;
	return (P - 1) - x;
end;
bit32.band = function(x, y)
	if (y == 255) then
		return x % 256;
	end
	if (y == 65535) then
		return x % 65536;
	end
	if (y == 4294967295) then
		return x % 4294967296;
	end
	x, y = x % P, y % P;
	local r = 0;
	local p = 1;
	for i = 1, N do
		local a, b = x % 2, y % 2;
		x, y = math.floor(x / 2), math.floor(y / 2);
		if ((a + b) == 2) then
			r = r + p;
		end
		p = 2 * p;
	end
	return r;
end;
bit32.bor = function(x, y)
	if (y == 255) then
		return (x - (x % 256)) + 255;
	end
	if (y == 65535) then
		return (x - (x % 65536)) + 65535;
	end
	if (y == 4294967295) then
		return 4294967295;
	end
	x, y = x % P, y % P;
	local r = 0;
	local p = 1;
	for i = 1, N do
		local a, b = x % 2, y % 2;
		x, y = math.floor(x / 2), math.floor(y / 2);
		if ((a + b) >= 1) then
			r = r + p;
		end
		p = 2 * p;
	end
	return r;
end;
bit32.bxor = function(x, y)
	x, y = x % P, y % P;
	local r = 0;
	local p = 1;
	for i = 1, N do
		local a, b = x % 2, y % 2;
		x, y = math.floor(x / 2), math.floor(y / 2);
		if ((a + b) == 1) then
			r = r + p;
		end
		p = 2 * p;
	end
	return r;
end;
bit32.lshift = function(x, s_amount)
	if (math.abs(s_amount) >= N) then
		return 0;
	end
	x = x % P;
	if (s_amount < 0) then
		return math.floor(x * (2 ^ s_amount));
	else
		return (x * (2 ^ s_amount)) % P;
	end
end;
bit32.rshift = function(x, s_amount)
	if (math.abs(s_amount) >= N) then
		return 0;
	end
	x = x % P;
	if (s_amount > 0) then
		return math.floor(x * (2 ^ -s_amount));
	else
		return (x * (2 ^ -s_amount)) % P;
	end
end;
bit32.arshift = function(x, s_amount)
	if (math.abs(s_amount) >= N) then
		return 0;
	end
	x = x % P;
	if (s_amount > 0) then
		local add = 0;
		if (x >= (P / 2)) then
			add = P - (2 ^ (N - s_amount));
		end
		return math.floor(x * (2 ^ -s_amount)) + add;
	else
		return (x * (2 ^ -s_amount)) % P;
	end
end;
local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 79) then
			local v89 = 0;
			while true do
				if (v89 == 0) then
					v19 = v0(v3(v30, 1, 1));
					return "";
				end
			end
		else
			local v90 = v2(v0(v30, 16));
			if v19 then
				local v112 = 0;
				local v113;
				while true do
					if (v112 == 1) then
						return v113;
					end
					if (v112 == 0) then
						v113 = v5(v90, v19);
						v19 = nil;
						v112 = 1;
					end
				end
			else
				return v90;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v91 = 0 - 0;
			local v92;
			while true do
				if (v91 == (0 - (877 - (282 + 595)))) then
					v92 = (v31 / (2 ^ (v32 - 1))) % ((3 - 1) ^ (((v33 - (2 - 1)) - (v32 - (620 - (555 + 64)))) + (932 - (857 + 74))));
					return v92 - (v92 % (569 - (367 + 201)));
				end
			end
		else
			local v93 = (929 - (214 + (2350 - (1523 + 114)))) ^ (v32 - (1 + 0));
			return (((v31 % (v93 + v93)) >= v93) and (1 + 0)) or 0;
		end
	end
	local function v21()
		local v34 = v1(v16, v18, v18);
		v18 = v18 + 1;
		return v34;
	end
	local function v22()
		local v35 = 0;
		local v36;
		local v37;
		while true do
			if (v35 == (0 + 0 + 0)) then
				v36, v37 = v1(v16, v18, v18 + (2 - 0));
				v18 = v18 + (1067 - (68 + 997));
				v35 = 1271 - (226 + 1044);
			end
			if (v35 == (4 - (1 + 2))) then
				return (v37 * (373 - (32 + 85))) + v36;
			end
		end
	end
	local function v23()
		local v38 = 0;
		local v39;
		local v40;
		local v41;
		local v42;
		while true do
			if (v38 == (957 - (892 + 65))) then
				v39, v40, v41, v42 = v1(v16, v18, v18 + (7 - 4));
				v18 = v18 + (9 - 5);
				v38 = 1 - (0 + 0);
			end
			if (v38 == (1 - (0 - 0))) then
				return (v42 * (16777566 - (87 + 263))) + (v41 * (65716 - (67 + 113))) + (v40 * (188 + 68)) + v39;
			end
		end
	end
	local function v24()
		local v43 = v23();
		local v44 = v23();
		local v45 = 3 - (1 + 1);
		local v46 = (v20(v44, 953 - (802 + 150), 20) * ((5 - 3) ^ (14 + 18))) + v43;
		local v47 = v20(v44, 36 - 15, 55 - 24);
		local v48 = ((v20(v44, 24 + 8) == (998 - ((1800 - (261 + 624)) + 82))) and -((3 - 1) - 1)) or (1 + 0);
		if (v47 == (0 - 0)) then
			if (v46 == (772 - (201 + 571))) then
				return v48 * (1138 - (116 + 1022));
			else
				local v114 = (2267 - (1020 + 60)) - (1069 + 118);
				while true do
					if ((0 - (1423 - (630 + 793))) == v114) then
						v47 = 1 - (0 - 0);
						v45 = 0 + 0;
						break;
					end
				end
			end
		elseif (v47 == (9691 - 7644)) then
			return ((v46 == (0 - 0)) and (v48 * ((1 + 0) / (791 - (368 + 423))))) or (v48 * NaN);
		end
		return v8(v48, v47 - (403 + 620)) * (v45 + (v46 / ((6 - 4) ^ (70 - (10 + 8)))));
	end
	local function v25(v49)
		local v50 = 0;
		local v51;
		local v52;
		while true do
			if ((6 - 4) == v50) then
				v52 = {};
				for v115 = 1748 - (760 + 987), #v51 do
					v52[v115] = v2(v1(v3(v51, v115, v115)));
				end
				v50 = (1505 + 411) - (1789 + 124);
			end
			if (v50 == (767 - (745 + 21))) then
				v51 = v3(v16, v18, (v18 + v49) - (1 + 0));
				v18 = v18 + v49;
				v50 = (1060 - (87 + 968)) - 3;
			end
			if (v50 == (11 - 8)) then
				return v6(v52);
			end
			if (v50 == (0 + 0)) then
				v51 = nil;
				if not v49 then
					v49 = v23();
					if (v49 == 0) then
						return "";
					end
				end
				v50 = 1;
			end
		end
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v53 = (function()
			return function(v94, v95, v96, v97, v98, v99, v100, v101, v102)
				local v103 = (function()
					return 0;
				end)();
				local v94 = (function()
					return;
				end)();
				local v95 = (function()
					return;
				end)();
				while true do
					if (v103 == (1767 - (308 + 1459))) then
						local v121 = (function()
							return 0 - 0;
						end)();
						while true do
							if (v121 ~= (0 - 0)) then
							else
								v94 = (function()
									return 0;
								end)();
								v95 = (function()
									return nil;
								end)();
								v121 = (function()
									return 1;
								end)();
							end
							if (v121 ~= 1) then
							else
								v103 = (function()
									return 3 - 2;
								end)();
								break;
							end
						end
					end
					if (v103 == 1) then
						while true do
							if (v94 == 0) then
								v95 = (function()
									return v96();
								end)();
								if (v97(v95, #"]", #"[") ~= 0) then
								else
									local v125 = (function()
										return 0;
									end)();
									local v126 = (function()
										return;
									end)();
									local v127 = (function()
										return;
									end)();
									local v128 = (function()
										return;
									end)();
									while true do
										if (v125 == (867 - (550 + 317))) then
											local v130 = (function()
												return 0;
											end)();
											while true do
												if (v130 ~= 0) then
												else
													v126 = (function()
														return v97(v95, 2, #"19(");
													end)();
													v127 = (function()
														return v97(v95, #"0836", 6);
													end)();
													v130 = (function()
														return 1 - 0;
													end)();
												end
												if ((1 - 0) ~= v130) then
												else
													v125 = (function()
														return 2 - 1;
													end)();
													break;
												end
											end
										end
										if (v125 == 2) then
											if (v97(v127, #"~", #"{") == #"/") then
												v128[287 - (134 + 151)] = (function()
													return v100[v128[2]];
												end)();
											end
											if (v97(v127, 2, 2) == #"}") then
												v128[#"-19"] = (function()
													return v100[v128[#"gha"]];
												end)();
											end
											v125 = (function()
												return 1668 - (970 + 695);
											end)();
										end
										if (v125 == (1 - 0)) then
											v128 = (function()
												return {v98(),v98(),nil,nil};
											end)();
											if (v126 == (0 - 0)) then
												local v425 = (function()
													return 0 - 0;
												end)();
												local v426 = (function()
													return;
												end)();
												while true do
													if (v425 ~= (0 - 0)) then
													else
														v426 = (function()
															return 1824 - (1195 + 629);
														end)();
														while true do
															if (v426 ~= (0 - 0)) then
															else
																v128[#"xnx"] = (function()
																	return v98();
																end)();
																v128[#".dev"] = (function()
																	return v98();
																end)();
																break;
															end
														end
														break;
													end
												end
											elseif (v126 == #" ") then
												v128[#"nil"] = (function()
													return v99();
												end)();
											elseif (v126 == (243 - (187 + 54))) then
												v128[#"91("] = (function()
													return v99() - ((782 - (162 + 618)) ^ 16);
												end)();
											elseif (v126 ~= #"asd") then
											else
												local v1104 = (function()
													return 0 + 0;
												end)();
												local v1105 = (function()
													return;
												end)();
												while true do
													if ((0 + 0) == v1104) then
														v1105 = (function()
															return 0 - 0;
														end)();
														while true do
															if ((0 - 0) ~= v1105) then
															else
																v128[#"19("] = (function()
																	return v99() - ((1 + 1) ^ (1652 - (1373 + 263)));
																end)();
																v128[#".dev"] = (function()
																	return v98();
																end)();
																break;
															end
														end
														break;
													end
												end
											end
											v125 = (function()
												return 1002 - (451 + 549);
											end)();
										end
										if (v125 == 3) then
											if (v97(v127, #"asd", #"xnx") ~= #"[") then
											else
												v128[#"asd1"] = (function()
													return v100[v128[#"0836"]];
												end)();
											end
											v101[v102] = (function()
												return v128;
											end)();
											break;
										end
									end
								end
								break;
							end
						end
						return v94, v95, v96, v97, v98, v99, v100, v101, v102;
					end
				end
			end;
		end)();
		local v54 = (function()
			return function(v104, v105, v106)
				local v107 = (function()
					return 0 + 0;
				end)();
				local v108 = (function()
					return;
				end)();
				while true do
					if (v107 ~= 0) then
					else
						v108 = (function()
							return 0;
						end)();
						while true do
							if (v108 == 0) then
								local v124 = (function()
									return 0;
								end)();
								while true do
									if (v124 == (0 - 0)) then
										local v129 = (function()
											return 0 - 0;
										end)();
										while true do
											if (v129 == 0) then
												v104[v105 - #"/"] = (function()
													return v106();
												end)();
												return v104, v105, v106;
											end
										end
									end
								end
							end
						end
						break;
					end
				end
			end;
		end)();
		local v55 = (function()
			return {};
		end)();
		local v56 = (function()
			return {};
		end)();
		local v57 = (function()
			return {};
		end)();
		local v58 = (function()
			return {v55,v56,nil,v57};
		end)();
		local v59 = (function()
			return v23();
		end)();
		local v60 = (function()
			return {};
		end)();
		for v68 = #"\\", v59 do
			local v69 = (function()
				return 0 + 0;
			end)();
			local v70 = (function()
				return;
			end)();
			local v71 = (function()
				return;
			end)();
			local v72 = (function()
				return;
			end)();
			while true do
				if (v69 == 0) then
					v70 = (function()
						return 0;
					end)();
					v71 = (function()
						return nil;
					end)();
					v69 = (function()
						return 1 - 0;
					end)();
				end
				if (v69 == 1) then
					v72 = (function()
						return nil;
					end)();
					while true do
						if (0 == v70) then
							local v122 = (function()
								return 341 - (218 + 123);
							end)();
							while true do
								if (v122 ~= 1) then
								else
									v70 = (function()
										return 1582 - (1535 + 46);
									end)();
									break;
								end
								if (v122 ~= (0 + 0)) then
								else
									v71 = (function()
										return v21();
									end)();
									v72 = (function()
										return nil;
									end)();
									v122 = (function()
										return 1 + 0;
									end)();
								end
							end
						end
						if (v70 == (561 - (306 + 254))) then
							if (v71 == #" ") then
								v72 = (function()
									return v21() ~= (0 + 0);
								end)();
							elseif (v71 == (3 - 1)) then
								v72 = (function()
									return v24();
								end)();
							elseif (v71 == #"91(") then
								v72 = (function()
									return v25();
								end)();
							end
							v60[v68] = (function()
								return v72;
							end)();
							break;
						end
					end
					break;
				end
			end
		end
		v58[#"-19"] = (function()
			return v21();
		end)();
		for v73 = #".", v23() do
			FlatIdent_7F35E, Descriptor, v21, v20, v22, v23, v60, v55, v73 = (function()
				return v53(FlatIdent_7F35E, Descriptor, v21, v20, v22, v23, v60, v55, v73);
			end)();
		end
		for v74 = #",", v23() do
			v56, v74, v28 = (function()
				return v54(v56, v74, v28);
			end)();
		end
		return v58;
	end
	local function v29(v62, v63, v64)
		local v65 = v62[1468 - (899 + 568)];
		local v66 = v62[1 + 1 + 0];
		local v67 = v62[3];
		return function(...)
			local v75 = v65;
			local v76 = v66;
			local v77 = v67;
			local v78 = v27;
			local v79 = 2 - 1;
			local v80 = -(604 - (268 + 335));
			local v81 = {};
			local v82 = {...};
			local v83 = v12("#", ...) - (573 - (426 + 146));
			local v84 = {};
			local v85 = {};
			for v109 = 0 + 0 + 0, v83 do
				if (v109 >= v77) then
					v81[v109 - v77] = v82[v109 + (1457 - (282 + 1174))];
				else
					v85[v109] = v82[v109 + (812 - (569 + 242))];
				end
			end
			local v86 = (v83 - v77) + (2 - 1);
			local v87;
			local v88;
			while true do
				v87 = v75[v79];
				v88 = v87[1971 - (49 + 1921)];
				if ((v88 <= (3 + 39)) or (2793 <= 1312)) then
					if ((v88 <= (1044 - (706 + 318))) or (3292 < 1467)) then
						if (v88 <= (1260 - (721 + 530))) then
							if ((v88 <= 4) or (2164 >= 3404)) then
								if (v88 <= 1) then
									if (v88 == 0) then
										local v133 = 1271 - (945 + (1216 - (223 + 667)));
										local v134;
										local v135;
										while true do
											if (v133 == (9 - 5)) then
												v79 = v79 + 1 + 0;
												v87 = v75[v79];
												v85[v87[702 - (271 + 429)]][v87[3 + 0]] = v87[1504 - (1408 + 92)];
												v79 = v79 + 1;
												v133 = 1091 - (461 + 625);
											end
											if ((1080 <= 2918) and (v133 == (1294 - (993 + 295)))) then
												v85[v87[1 + 1]][v87[1174 - (418 + 753)]] = v87[2 + 2];
												break;
											end
											if ((v133 == 3) or (3426 <= 1781)) then
												v85[v135] = v134[v87[1 + 3]];
												v79 = v79 + 1 + 0;
												v87 = v75[v79];
												v85[v87[1 + (53 - (51 + 1))]] = {};
												v133 = (917 - 384) - (406 + 123);
											end
											if (v133 == ((3798 - 2024) - (1749 + 20))) then
												v87 = v75[v79];
												v85[v87[1 + (1126 - (146 + 979))]][v87[1 + 2]] = v87[1326 - ((1854 - (311 + 294)) + 73)];
												v79 = v79 + (2 - 1);
												v87 = v75[v79];
												v133 = 3 + 3;
											end
											if ((v133 == (1146 - (198 + 268 + 679))) or (1370 == 608)) then
												v87 = v75[v79];
												v135 = v87[(1447 - (496 + 947)) - 2];
												v85[v135] = v85[v135](v13(v85, v135 + (2 - (1359 - (1233 + 125))), v87[1903 - (44 + 62 + 1794)]));
												v79 = v79 + 1 + 0;
												v133 = 1 + 1;
											end
											if (v133 == (0 - 0)) then
												v134 = nil;
												v135 = nil;
												v85[v87[5 - 3]][v87[117 - (4 + 110)]] = v85[v87[588 - (57 + 473 + 54)]];
												v79 = v79 + 1;
												v133 = 1;
											end
											if ((3133 >= 1678) and ((v133 == 2) or (4376 <= 4070))) then
												v87 = v75[v79];
												v135 = v87[1429 - (41 + 1386)];
												v134 = v85[v87[106 - (17 + 86)]];
												v85[v135 + 1 + 0] = v134;
												v133 = 6 - 3;
											end
										end
									else
										local v136;
										local v137;
										v85[v87[(1 + 4) - (1648 - (963 + 682))]] = v87[169 - (122 + 44)];
										v79 = v79 + (1 - 0);
										v87 = v75[v79];
										v85[v87[6 - 4]] = v64[v87[3 + 0 + 0]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v137 = v87[3 - 1];
										v136 = v85[v87[68 - (30 + 35)]];
										v85[v137 + 1] = v136;
										v85[v137] = v136[v87[3 + 1]];
										v79 = v79 + (1258 - (1043 + 214));
										v87 = v75[v79];
										v85[v87[7 - 5]] = v87[1215 - (323 + 889)];
										v79 = v79 + (2 - 1);
										v87 = v75[v79];
										v137 = v87[582 - (361 + 219)];
										v85[v137] = v85[v137](v13(v85, v137 + (321 - (53 + 267)), v87[3]));
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[1 + 1]] = v85[v87[3]][v87[(1921 - (504 + 1000)) - (15 + 398)]];
										v79 = v79 + (983 - (18 + 964));
										v87 = v75[v79];
										v85[v87[7 - 5]] = v64[v87[2 + 0 + 1 + 0]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v137 = v87[852 - (20 + 830)];
										v136 = v85[v87[3 + 0]];
										v85[v137 + 1] = v136;
										v85[v137] = v136[v87[(13 + 117) - (116 + 10)]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v85[v87[740 - (542 + 196)]] = v87[(8 - 2) - 3];
										v79 = v79 + 1 + 0 + 0;
										v87 = v75[v79];
										v137 = v87[2];
										v85[v137] = v85[v137](v13(v85, v137 + 1 + 0 + 0, v87[2 + 1]));
									end
								elseif ((v88 <= (4 - 2)) or (805 > 4162)) then
									local v160;
									v85[v87[2]][v87[3]] = v87[186 - (156 + 26)];
									v79 = v79 + (2 - (1 + 0));
									v87 = v75[v79];
									v85[v87[1553 - (1126 + 425)]][v87[3]] = v87[409 - (118 + 287)];
									v79 = v79 + (3 - (2 - 0));
									v87 = v75[v79];
									v85[v87[1123 - (118 + 1003)]][v87[8 - 5]] = v85[v87[4]];
									v79 = v79 + (378 - (142 + 235));
									v87 = v75[v79];
									v85[v87[9 - 7]] = v64[v87[1 + 2]];
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[979 - (553 + (588 - (149 + 15)))]] = v85[v87[5 - 2]][v87[4 + 0]];
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v85[v87[2 + 0]] = v87[2 + (961 - (890 + 70))];
									v79 = v79 + 1 + (117 - (39 + 78));
									v87 = v75[v79];
									v85[v87[4 - 2]] = v87[3];
									v79 = v79 + (2 - 1);
									v87 = v75[v79];
									v85[v87[4 - 2]] = v87[1 + 2];
									v79 = v79 + (4 - 3);
									v87 = v75[v79];
									v160 = v87[755 - (239 + 514)];
									v85[v160] = v85[v160](v13(v85, v160 + 1, v87[3]));
									v79 = v79 + 1 + (482 - (14 + 468));
									v87 = v75[v79];
									v85[v87[1331 - (797 + 532)]][v87[3 + 0]] = v85[v87[2 + 2]];
								elseif ((4721 > 1294) and (v88 > 3)) then
									v85[v87[2]] = v85[v87[6 - 3]];
								else
									local v437 = 1202 - (373 + 829);
									local v438;
									local v439;
									while true do
										if (v437 == 7) then
											v79 = v79 + (732 - (476 + 255));
											v87 = v75[v79];
											v79 = v87[1133 - (369 + 761)];
											break;
										end
										if (v437 == 1) then
											v85[v439] = v438[v87[4]];
											v79 = v79 + 1 + 0;
											v87 = v75[v79];
											v85[v87[2]] = v85[v87[5 - 2]][v87[7 - 3]];
											v79 = v79 + (239 - (64 + (382 - 208)));
											v437 = 1 + 1;
										end
										if (v437 == (7 - 2)) then
											v79 = v79 + (337 - (144 + 192));
											v87 = v75[v79];
											v439 = v87[218 - (42 + 174)];
											v85[v439] = v85[v439](v85[v439 + 1 + 0]);
											v79 = v79 + 1;
											v437 = 5 + 1;
										end
										if ((3 + 3) == v437) then
											v87 = v75[v79];
											v85[v87[1506 - (363 + (3189 - 2048))]] = v85[v87[3]];
											v79 = v79 + 1;
											v87 = v75[v79];
											v85[v87[2]] = v87[1583 - (1183 + 397)];
											v437 = 7;
										end
										if ((v437 == 0) or (2719 == 338)) then
											v438 = nil;
											v439 = nil;
											v439 = v87[(3 + 2) - 3];
											v438 = v85[v87[3]];
											v85[v439 + 1 + 0] = v438;
											v437 = 1;
										end
										if ((4904 == 4904) and ((2 + 1 + 1 + 0) == v437)) then
											v87 = v75[v79];
											v439 = v87[2];
											v438 = v85[v87[1978 - (1913 + 62)]];
											v85[v439 + 1 + 0 + 0] = v438;
											v85[v439] = v438[v87[4]];
											v437 = 13 - 8;
										end
										if (v437 == (1936 - (565 + 1368))) then
											v85[v87[7 - 5]] = v85[v87[1664 - (1477 + 184)]];
											v79 = v79 + ((1 + 0) - 0);
											v87 = v75[v79];
											v85[v87[2 + 0]] = v63[v87[859 - (564 + 292)]];
											v79 = v79 + (1 - 0);
											v437 = (20 - 9) - 7;
										end
										if ((2263 <= 4336) and (v437 == (306 - (244 + 60)))) then
											v87 = v75[v79];
											v439 = v87[2 + 0];
											v85[v439] = v85[v439](v13(v85, v439 + 1, v87[479 - (41 + 430 + 5)]));
											v79 = v79 + (1002 - (938 + 63));
											v87 = v75[v79];
											v437 = (10 - 7) + 0;
										end
									end
								end
							elseif ((v88 <= (1131 - (936 + 189))) or (2525 > 4643) or (1156 <= 385)) then
								if (v88 == (2 + 3)) then
									local v181 = 0;
									local v182;
									local v183;
									local v184;
									local v185;
									local v186;
									while true do
										if (v181 == (1613 - (1565 + 48))) then
											v182 = nil;
											v183, v184 = nil;
											v185 = nil;
											v186 = nil;
											v186 = v87[2];
											v181 = 1 + 0;
										end
										if ((1143 - (782 + 356)) == v181) then
											v185 = v85[v87[270 - (176 + 91)]];
											v85[v186 + (2 - 1)] = v185;
											v85[v186] = v185[v87[4]];
											v79 = v79 + (1 - 0);
											v87 = v75[v79];
											v181 = 1098 - (975 + 117);
										end
										if ((4 == v181) or (1767 > 4108)) then
											v87 = v75[v79];
											v85[v87[2]] = v64[v87[1878 - (157 + 1718)]];
											v79 = v79 + 1 + 0;
											v87 = v75[v79];
											v186 = v87[6 - 4];
											v181 = 17 - (1 + 11);
										end
										if ((3132 < 3745) and ((1025 - (697 + 321)) == v181)) then
											v80 = (v184 + v186) - 1;
											v182 = 0 - 0;
											for v893 = v186, v80 do
												local v894 = 0 - 0;
												while true do
													if (((0 - 0) == v894) or (4858 == 4942)) then
														v182 = v182 + 1 + 0;
														v85[v893] = v183[v182];
														break;
													end
												end
											end
											v79 = v79 + (1 - 0);
											v87 = v75[v79];
											v181 = 21 - 13;
										end
										if ((1649 <= 2572) and ((v181 == (1229 - (322 + 905))) or (3983 < 1150))) then
											v87 = v75[v79];
											v186 = v87[613 - (602 + 9)];
											v85[v186] = v85[v186]();
											v79 = v79 + (1190 - (449 + 740));
											v87 = v75[v79];
											v181 = (926 - (12 + 39)) - (826 + 43 + 3);
										end
										if (((4066 < 4247) and (v181 == (948 - (245 + 702)))) or (4424 <= 3216)) then
											v85[v186](v13(v85, v186 + (3 - (5 - 3)), v87[1 + 2]));
											v79 = v79 + 1;
											v87 = v75[v79];
											v85[v87[1900 - (260 + 1638)]] = v64[v87[(1577 - 1134) - (382 + 58)]];
											v79 = v79 + (3 - 2);
											v181 = 2;
										end
										if (v181 == (7 + 1)) then
											v186 = v87[3 - 1];
											v85[v186] = v85[v186](v13(v85, v186 + 1, v80));
											break;
										end
										if ((v181 == (8 - 5)) or (1446 < 545)) then
											v85[v87[1207 - (902 + 90 + 213)]][v87[3]] = v87[4];
											v79 = v79 + (1 - 0);
											v87 = v75[v79];
											v85[v87[4 - 2]] = v64[v87[1 + 0 + 2]];
											v79 = v79 + 1;
											v181 = 1694 - (1121 + 569);
										end
										if ((220 - (22 + (486 - 294))) == v181) then
											v85[v87[685 - (322 + 161 + 200)]] = v87[1466 - (1404 + 59)];
											v79 = v79 + 1;
											v87 = v75[v79];
											v186 = v87[5 - (14 - 11)];
											v183, v184 = v78(v85[v186](v13(v85, v186 + (1 - 0), v87[(2478 - (1596 + 114)) - (468 + 297)])));
											v181 = 569 - (334 + 228);
										end
									end
								else
									local v187;
									v85[v87[6 - 4]] = v87[6 - 3] ~= (0 - 0);
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[1 + 1]] = v87[(623 - 384) - (141 + 95)] ~= (0 + 0);
									v79 = v79 + (2 - 1);
									v87 = v75[v79];
									v85[v87[4 - 2]] = v64[v87[716 - (164 + 549)]];
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v85[v87[5 - 3]] = v85[v87[3 + 0]][v87[4]];
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v85[v87[2 - 0]] = v87[2 + 1];
									v79 = v79 + (164 - (92 + 71));
									v87 = v75[v79];
									v85[v87[1 + 1]] = v87[(1442 - (1059 + 379)) - 1];
									v79 = v79 + (1 - 0);
									v87 = v75[v79];
									v85[v87[767 - (574 + 191)]] = v87[3 + 0];
									v79 = v79 + (2 - 1);
									v87 = v75[v79];
									v187 = v87[2];
									v85[v187] = v85[v187](v13(v85, v187 + 1, v87[3]));
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v85[v87[851 - (254 + 595)]] = v85[v87[(67 + 62) - (55 + 71)]][v87[5 - 1]];
									v79 = v79 + (1791 - (573 + 206 + 1011));
									v87 = v75[v79];
									v85[v87[5 - 3]] = v87[1 + 2];
								end
							elseif ((v88 <= (10 - 3)) or (616 == 199)) then
								local v205;
								v85[v87[941 - (714 + 225)]] = v85[v87[8 - 5]];
								v79 = v79 + (1 - 0);
								v87 = v75[v79];
								v205 = v87[(393 - (145 + 247)) + 1];
								v85[v205] = v85[v205](v85[v205 + (1 - 0)]);
								v79 = v79 + (807 - (118 + 688));
								v87 = v75[v79];
								v85[v87[50 - (21 + 4 + 23)]] = v85[v87[1 + 1 + 1]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[(5597 - 3709) - (927 + 959)]] = v63[v87[3]];
								v79 = v79 + (3 - 2);
								v87 = v75[v79];
								v85[v87[2]] = v85[v87[735 - (16 + 716)]];
								v79 = v79 + (1 - (0 + 0));
								v87 = v75[v79];
								v205 = v87[99 - (11 + 86)];
								v85[v205] = v85[v205](v85[v205 + (2 - 1)]);
								v79 = v79 + (286 - (175 + 110));
								v87 = v75[v79];
								v85[v87[4 - 2]] = v85[v87[3 + 0]];
								v79 = v79 + (4 - 3);
								v87 = v75[v79];
								v85[v87[1798 - (503 + 1293)]] = v87[8 - 5];
							elseif (v88 > (6 + (2 - 0))) then
								v79 = v87[1064 - (810 + 251)];
							else
								local v441;
								local v442;
								v85[v87[2 + 0]] = v64[v87[1 + 2]];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v442 = v87[2];
								v441 = v85[v87[3]];
								v85[v442 + 1] = v441;
								v85[v442] = v441[v87[537 - (43 + 490)]];
								v79 = v79 + (734 - (711 + (742 - (254 + 466))));
								v87 = v75[v79];
								v85[v87[2]] = v87[(571 - (544 + 16)) - 8];
								v79 = v79 + (2 - 1);
								v87 = v75[v79];
								v442 = v87[861 - (240 + 619)];
								v85[v442] = v85[v442](v13(v85, v442 + 1 + 0, v87[3]));
								v79 = v79 + ((629 - (294 + 334)) - 0);
								v87 = v75[v79];
								v85[v87[1 + 1]] = v64[v87[1747 - (1344 + (653 - (236 + 17)))]];
								v79 = v79 + (406 - (255 + 150));
								v87 = v75[v79];
								v442 = v87[2];
								v441 = v85[v87[3]];
								v85[v442 + 1] = v441;
								v85[v442] = v441[v87[4]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[1 + 1 + 0]] = v87[2 + 1];
								v79 = v79 + (4 - 3);
								v87 = v75[v79];
								v442 = v87[6 - 4];
								v85[v442] = v85[v442](v13(v85, v442 + (1740 - (315 + 89 + 1335)), v87[409 - (183 + 223)]));
								v79 = v79 + (1 - 0);
								v87 = v75[v79];
								v85[v87[2 + 0]] = v64[v87[2 + 1]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v442 = v87[339 - (10 + 327)];
								v441 = v85[v87[3 + 0]];
								v85[v442 + 1] = v441;
								v85[v442] = v441[v87[342 - (118 + 220)]];
							end
						elseif ((v88 <= ((18 - 13) + 9)) or (1564 > 3638)) then
							if ((2442 < 4070) and (v88 <= (460 - (108 + (1614 - 1273))))) then
								if (v88 > (3 + 2 + 5 + 0)) then
									local v222 = 0 - 0;
									local v223;
									local v224;
									local v225;
									while true do
										if ((794 - (413 + 381)) == v222) then
											v223 = v87[1495 - (711 + 782)];
											v224 = v85[v223];
											v222 = (1 + 0) - 0;
										end
										if (v222 == (470 - (270 + 199))) then
											v225 = v87[1 + 2];
											for v895 = 1820 - ((1233 - 653) + 1239), v225 do
												v224[v895] = v85[v223 + v895];
											end
											break;
										end
									end
								else
									v85[v87[5 - 3]] = v85[v87[3]] * v85[v87[4 + 0]];
								end
							elseif ((v88 <= (1 + (28 - 17))) or (4384 <= 2280) or (3968 <= 1084)) then
								local v227;
								local v228;
								v228 = v87[1 + 1];
								v227 = v85[v87[3]];
								v85[v228 + 1] = v227;
								v85[v228] = v227[v87[9 - 5]];
								v79 = v79 + 1 + (1970 - (582 + 1388));
								v87 = v75[v79];
								v85[v87[1169 - (645 + 522)]] = v87[1793 - (1010 + 780)];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v228 = v87[2 - 0];
								v85[v228] = v85[v228](v13(v85, v228 + (4 - 3), v87[8 - 5]));
								v79 = v79 + (1837 - (1045 + 791));
								v87 = v75[v79];
								v85[v87[(3 + 1) - 2]] = v85[v87[4 - (365 - (326 + 38))]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[2]] = v85[v87[508 - (351 + 154)]][v87[1578 - (1281 + 293)]];
								v79 = v79 + (2 - 1);
								v87 = v75[v79];
								v228 = v87[2];
								v227 = v85[v87[269 - (28 + 238)]];
								v85[v228 + 1] = v227;
								v85[v228] = v227[v87[(10 - 2) - 4]];
								v79 = v79 + (1560 - (1381 + 178));
								v87 = v75[v79];
								v85[v87[2 + 0]] = v87[(623 - (47 + 573)) + 0];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v228 = v87[6 - 4];
								v85[v228] = v85[v228](v13(v85, v228 + 1 + 0, v87[473 - (381 + 89)]));
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[2]] = v85[v87[3 + 0]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[2 - 0]] = v87[1159 - (1074 + 82)];
							elseif (v88 == 13) then
								local v464;
								v85[v87[3 - 1]] = v85[v87[1787 - (214 + 1570)]][v87[1459 - (990 + 164 + 301)]];
								v79 = v79 + 1 + (0 - 0);
								v87 = v75[v79];
								v464 = v87[1 + (1 - 0)];
								v85[v464] = v85[v464]();
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[7 - (1669 - (1269 + 395))]] = v85[v87[495 - (76 + 416)]];
								v79 = v79 + (1727 - (1668 + 58));
								v87 = v75[v79];
								v85[v87[2]] = v64[v87[629 - ((955 - (319 + 124)) + 114)]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[2]] = v85[v87[7 - 4]][v87[4]];
								v79 = v79 + (1 - 0);
								v87 = v75[v79];
								v85[v87[6 - 4]] = v85[v87[(4 - 2) + 1]][v87[4]];
								v79 = v79 + (1008 - (564 + 443)) + (0 - 0);
								v87 = v75[v79];
								v85[v87[2 + 0]][v87[10 - 7]] = v85[v87[4]];
								v79 = v79 + (1995 - (109 + 1885));
								v87 = v75[v79];
								v85[v87[460 - (337 + 121)]] = v87[(4312 - 2840) - (1269 + 200)];
								v79 = v79 + (1 - 0);
								v87 = v75[v79];
								v79 = v87[818 - (98 + 717)];
							else
								v85[v87[828 - (802 + 24)]] = v85[v87[5 - 2]][v87[4]];
							end
						elseif ((v88 <= 17) or (4137 < 1807)) then
							if (v88 <= (18 - 3)) then
								if (v85[v87[1 + (3 - 2)]] ~= v85[v87[4 + 0]]) then
									v79 = v79 + 1;
								else
									v79 = v87[3];
								end
							elseif (((4564 > 598) and (v88 == (3 + 13))) or (443 >= 1460)) then
								v85[v87[1 + 1]] = v87[3] ~= (0 - 0);
								v79 = v79 + (3 - 2);
							else
								local v486 = 0 + (1911 - (1261 + 650));
								local v487;
								local v488;
								while true do
									if (v486 == (3 + 2)) then
										v85[v87[2 + 0]] = v85[v87[3 + 0]];
										v79 = v79 + 1 + 0;
										v87 = v75[v79];
										v486 = 6;
									end
									if ((v486 == (1435 - (797 + 270 + 366))) or (2707 < 255)) then
										v79 = v79 + 1;
										v87 = v75[v79];
										v85[v87[2]] = v87[14 - 11];
										v486 = 1622 - (1427 + 192);
									end
									if ((3747 == 3747) and (v486 == (3 + 3))) then
										if v85[v87[4 - 2]] then
											v79 = v79 + 1;
										else
											v79 = v87[3 + 0];
										end
										break;
									end
									if (v486 == (1 + 0)) then
										v487 = v85[v87[(523 - 194) - (192 + 134)]];
										v85[v488 + (1277 - (316 + 960))] = v487;
										v85[v488] = v487[v87[1821 - (772 + 1045)]];
										v486 = 1 + 1 + 0;
									end
									if (v486 == ((144 - (102 + 42)) + (1844 - (1524 + 320)))) then
										v487 = nil;
										v488 = nil;
										v488 = v87[(1272 - (1049 + 221)) + 0];
										v486 = 3 - (158 - (18 + 138));
									end
									if ((7 - 4) == v486) then
										v79 = v79 + (552 - (83 + 468));
										v87 = v75[v79];
										v488 = v87[1808 - (1202 + 604)];
										v486 = (1120 - (67 + 1035)) - 14;
									end
									if (v486 == (6 - 2)) then
										v85[v488] = v85[v488](v13(v85, v488 + (2 - 1), v87[3]));
										v79 = v79 + (326 - (45 + 280));
										v87 = v75[v79];
										v486 = 5 + 0;
									end
								end
							end
						elseif ((3889 < 4766) and (v88 <= (16 + 2))) then
							local v251;
							v85[v87[1 + 1]] = v85[v87[2 + 1]][v87[1 + 3]];
							v79 = v79 + (1 - 0);
							v87 = v75[v79];
							v85[v87[1913 - (340 + 1571)]] = v85[v87[3]][v87[2 + 2]];
							v79 = v79 + (1773 - (1733 + 39));
							v87 = v75[v79];
							v85[v87[5 - 3]] = v85[v87[1037 - (125 + 909)]][v87[1952 - (1096 + 852)]];
							v79 = v79 + 1;
							v87 = v75[v79];
							v251 = v87[(349 - (136 + 212)) + 1];
							v85[v251] = v85[v251](v13(v85, v251 + (1 - 0), v87[3]));
							v79 = v79 + 1 + 0;
							v87 = v75[v79];
							v85[v87[514 - (409 + 103)]] = v85[v87[239 - (46 + 190)]] - v85[v87[99 - (51 + 44)]];
							v79 = v79 + 1;
							v87 = v75[v79];
							v85[v87[2]] = v85[v87[3]][v87[2 + 2]];
							v79 = v79 + (1318 - (1114 + 203));
							v87 = v75[v79];
							if ((2628 > 2464) and (v85[v87[2]] < v85[v87[730 - (228 + 498)]])) then
								v79 = v79 + 1 + 0;
							else
								v79 = v87[3];
							end
						elseif ((v88 == (11 + 8)) or (3197 <= 2999)) then
							v85[v87[(2825 - 2160) - (140 + 34 + 489)]] = {};
						elseif ((3982 <= 4852) and not v85[v87[2]]) then
							v79 = v79 + ((2 + 0) - (1605 - (240 + 1364)));
						else
							v79 = v87[(2990 - (1050 + 32)) - (830 + 1075)];
						end
					elseif (v88 <= (555 - ((1081 - 778) + 221))) then
						if ((4673 == 4673) and (v88 <= (1294 - (231 + 1038)))) then
							if ((v88 <= (19 + 2 + 1)) or (952 <= 71)) then
								if (v88 == (1183 - (171 + 991))) then
									local v263 = 0 - 0;
									local v264;
									while true do
										if (v263 == (0 - 0)) then
											v264 = v87[4 - 2];
											v85[v264] = v85[v264]();
											break;
										end
									end
								else
									do
										return;
									end
								end
							elseif ((2927 < 3035) and (2347 >= 423) and (v88 <= (19 + 4))) then
								v85[v87[6 - 4]][v87[8 - 5]] = v85[v87[4]];
							elseif (v88 == (38 - 14)) then
								v85[v87[(1061 - (331 + 724)) - 4]][v87[1251 - (111 + 1137)]] = v87[162 - (91 + 67)];
							else
								local v493;
								v85[v87[2]] = v85[v87[8 - 5]][v87[4]];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[2]] = v85[v87[526 - (423 + 100)]][v87[1 + 0 + 3]];
								v79 = v79 + (2 - 1);
								v87 = v75[v79];
								v85[v87[2 + 0]] = v85[v87[774 - (326 + 445)]][v87[4]];
								v79 = v79 + (4 - 3);
								v87 = v75[v79];
								v85[v87[4 - 2]] = v85[v87[6 - 3]] - v87[715 - (530 + 181)];
								v79 = v79 + (882 - ((1258 - (269 + 375)) + 267));
								v87 = v75[v79];
								v493 = v87[2];
								v85[v493] = v85[v493](v13(v85, v493 + (33 - ((744 - (267 + 458)) + 13)), v87[4 - 1]));
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[4 - 2]][v87[8 - 5]] = v85[v87[4]];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[3 - 1]] = v64[v87[3]];
								v79 = v79 + ((1 + 0) - 0);
								v87 = v75[v79];
								v85[v87[(3488 - 1674) - (1293 + 519)]] = v85[v87[5 - 2]][v87[4]];
								v79 = v79 + (2 - 1);
								v87 = v75[v79];
								v85[v87[3 - 1]] = v87[3];
								v79 = v79 + (4 - 3);
								v87 = v75[v79];
								v85[v87[2]] = v87[6 - 3];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[2]] = v87[1 + (820 - (667 + 151))];
								v79 = v79 + (2 - 1);
								v87 = v75[v79];
								v493 = v87[1 + 1];
								v85[v493] = v85[v493](v13(v85, v493 + 1 + 0, v87[2 + 1]));
								v79 = v79 + ((2594 - (1410 + 87)) - (709 + 387));
								v87 = v75[v79];
								v85[v87[1860 - (673 + 1185)]][v87[8 - 5]] = v85[v87[12 - 8]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[2 - (1897 - (1504 + 393))]] = v87[3 + 0];
							end
						elseif ((4435 >= 1961) and (4997 >= 4775) and (v88 <= (21 + 7))) then
							if ((v88 <= (70 - 44)) or (3500 <= 631)) then
								local v267 = v87[2];
								local v268 = {v85[v267](v13(v85, v267 + 1 + 0, v87[5 - 2]))};
								local v269 = 0 - 0;
								for v428 = v267, v87[1884 - (446 + 1434)] do
									v269 = v269 + (1284 - (1040 + 243));
									v85[v428] = v268[v269];
								end
							elseif (v88 > (80 - 53)) then
								for v791 = v87[1849 - (559 + 1288)], v87[1934 - ((1579 - 970) + 1322)] do
									v85[v791] = nil;
								end
							else
								local v517 = v87[456 - (13 + 441)];
								local v518, v519 = v78(v85[v517](v13(v85, v517 + (3 - 2), v87[(803 - (461 + 335)) - 4])));
								v80 = (v519 + v517) - (4 - 3);
								local v520 = 0 + 0;
								for v793 = v517, v80 do
									v520 = v520 + (3 - 2);
									v85[v793] = v518[v520];
								end
							end
						elseif ((1842 < 3956) and (v88 <= (11 + 18))) then
							local v270 = 0 + 0;
							local v271;
							while true do
								if (v270 == 0) then
									v271 = v87[5 - (1 + 2)];
									do
										return v13(v85, v271, v80);
									end
									break;
								end
							end
						elseif (v88 > (17 + 13)) then
							local v521;
							local v522;
							v85[v87[2]][v87[3]] = v85[v87[7 - 3]];
							v79 = v79 + 1 + 0;
							v87 = v75[v79];
							v522 = v87[2 + 0];
							v85[v522] = v85[v522](v13(v85, v522 + 1 + 0, v87[3 + (1761 - (1730 + 31))]));
							v79 = v79 + (1668 - (728 + 939)) + 0;
							v87 = v75[v79];
							v522 = v87[435 - (153 + 280)];
							v521 = v85[v87[8 - 5]];
							v85[v522 + 1 + (0 - 0)] = v521;
							v85[v522] = v521[v87[2 + 2]];
							v79 = v79 + 1 + 0;
							v87 = v75[v79];
							v85[v87[2 + 0]] = {};
							v79 = v79 + 1 + 0;
							v87 = v75[v79];
							v85[v87[2]][v87[3]] = v87[5 - 1];
							v79 = v79 + 1 + 0;
							v87 = v75[v79];
							v85[v87[669 - (89 + 578)]][v87[(5 - 2) + 0]] = v87[(18 - 10) - 4];
							v79 = v79 + (1050 - ((1640 - (138 + 930)) + 477));
							v87 = v75[v79];
							v85[v87[1 + 1]][v87[2 + 1]] = v87[1 + 3];
						else
							local v538 = v87[88 - (84 + 2)];
							local v539 = v87[4];
							local v540 = v538 + (2 - 0);
							local v541 = {v85[v538](v85[v538 + (843 - (497 + 345))], v85[v540])};
							for v797 = 1 + 0, v539 do
								v85[v540 + v797] = v541[v797];
							end
							local v542 = v541[1];
							if v542 then
								local v899 = 0 + 0;
								while true do
									if (v899 == 0) then
										v85[v540] = v542;
										v79 = v87[3];
										break;
									end
								end
							else
								v79 = v79 + ((1043 + 291) - (605 + 728));
							end
						end
					elseif ((2123 >= 1498) and (v88 <= (26 + 10))) then
						if (v88 <= (73 - 40)) then
							if (v88 == (2 + 30)) then
								local v272 = v87[7 - (5 + 0)];
								do
									return v13(v85, v272, v272 + v87[3 + 0]);
								end
							else
								local v273;
								local v274;
								v85[v87[5 - 3]][v87[3 + 0]] = v87[493 - (457 + 32)];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[1404 - ((3397 - 2565) + 570)]] = v63[v87[3]];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v274 = v87[1 + 1];
								v273 = v85[v87[3]];
								v85[v274 + (3 - 2)] = v273;
								v85[v274] = v273[v87[2 + 2]];
								v79 = v79 + (797 - (588 + 208));
								v87 = v75[v79];
								v274 = v87[5 - 3];
								v85[v274] = v85[v274](v85[v274 + (1801 - (884 + 916))]);
								v79 = v79 + (1 - 0);
								v87 = v75[v79];
								v85[v87[2 + 0]] = v85[v87[656 - (232 + 421)]];
								v79 = v79 + (1890 - (1569 + 320));
								v87 = v75[v79];
								v85[v87[1 + 1]] = v87[1 + (1768 - (459 + 1307))];
								v79 = v79 + (3 - 2);
								v87 = v75[v79];
								v79 = v87[608 - (316 + 289)];
							end
						elseif ((3333 < 3636) and (v88 <= (88 - 54))) then
							do
								return v85[v87[2]];
							end
						elseif (v88 == 35) then
							local v543;
							local v544;
							v544 = v87[1 + 1];
							v543 = v85[v87[1456 - (666 + 787)]];
							v85[v544 + (426 - (360 + 65))] = v543;
							v85[v544] = v543[v87[4 + 0]];
							v79 = v79 + 1;
							v87 = v75[v79];
							v85[v87[256 - (79 + (2045 - (474 + 1396)))]] = v85[v87[4 - 1]][v87[4 + 0]];
							v79 = v79 + (2 - 1);
							v87 = v75[v79];
							v544 = v87[3 - (1 - 0)];
							do
								return v85[v544](v13(v85, v544 + (900 - (503 + 372 + 24)), v87[(1 + 183) - (92 + (254 - 165))]));
							end
							v79 = v79 + 1;
							v87 = v75[v79];
							v544 = v87[3 - 1];
							do
								return v13(v85, v544, v80);
							end
							v79 = v79 + 1 + 0;
							v87 = v75[v79];
							v79 = v87[2 + 1];
						else
							v85[v87[7 - (1 + 4)]] = v29(v76[v87[(3 - 2) + 2]], nil, v64);
						end
					elseif (v88 <= (88 - 49)) then
						if (v88 <= (33 + 4)) then
							v85[v87[2]] = v85[v87[3]] - v85[v87[2 + 2]];
						elseif ((v88 > (115 - 77)) or (1979 == 1924)) then
							local v557 = v87[1 + (4 - 3)];
							local v558 = {v85[v557](v13(v85, v557 + 1, v80))};
							local v559 = 0 + 0;
							for v800 = v557, v87[4] do
								v559 = v559 + (1245 - (485 + 759));
								v85[v800] = v558[v559];
							end
						else
							v63[v87[6 - 3]] = v85[v87[2]];
						end
					elseif (v88 <= (1229 - (442 + 747))) then
						local v292 = 1135 - (832 + 303);
						local v293;
						local v294;
						while true do
							if (v292 == (952 - (88 + 858))) then
								v87 = v75[v79];
								v85[v87[2]] = v85[v87[3]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[1 + (1420 - (374 + 1045))]] = v87[3 + 0];
								break;
							end
							if ((v292 == (0 + 0)) or (840 > 4348)) then
								v293 = nil;
								v294 = nil;
								v294 = v87[791 - (766 + 19 + 4)];
								v293 = v85[v87[14 - 11]];
								v85[v294 + (1 - 0)] = v293;
								v292 = 2 - 1;
							end
							if (v292 == (13 - 9)) then
								v87 = v75[v79];
								v294 = v87[1075 - (1036 + 37)];
								v293 = v85[v87[3 + 0]];
								v85[v294 + (1 - 0)] = v293;
								v85[v294] = v293[v87[4 + 0]];
								v292 = 5;
							end
							if ((4583 > 4499) and (v292 == (1483 - (641 + 839)))) then
								v85[v87[2]] = v85[v87[916 - (910 + 3)]];
								v79 = v79 + (2 - 1);
								v87 = v75[v79];
								v85[v87[2]] = v63[v87[(5238 - 3551) - (1466 + 218)]];
								v79 = v79 + 1 + (638 - (448 + 190));
								v292 = 1152 - (556 + 592);
							end
							if (v292 == (1 + 1)) then
								v87 = v75[v79];
								v294 = v87[2];
								v85[v294] = v85[v294](v13(v85, v294 + 1, v87[811 - (329 + 479)]));
								v79 = v79 + (855 - (174 + 680));
								v87 = v75[v79];
								v292 = 1 + 2;
							end
							if ((4221 > 4162) and (v292 == (1 + 0))) then
								v85[v294] = v293[v87[13 - 9]];
								v79 = v79 + (1 - (0 + 0));
								v87 = v75[v79];
								v85[v87[2 + 0]] = v85[v87[3]][v87[743 - (396 + 343)]];
								v79 = v79 + 1 + 0;
								v292 = 1479 - (29 + 1448);
							end
							if (v292 == (1394 - (135 + 1254))) then
								v79 = v79 + ((11 - 8) - 2);
								v87 = v75[v79];
								v294 = v87[(27 - 18) - (1501 - (1307 + 187))];
								v85[v294] = v85[v294](v85[v294 + 1]);
								v79 = v79 + 1 + 0;
								v292 = 6;
							end
						end
					elseif (v88 == (1568 - (389 + 1138))) then
						v85[v87[2]] = v87[577 - (102 + 472)];
					else
						local v564 = (0 - 0) + 0;
						local v565;
						local v566;
						while true do
							if (v564 == 1) then
								v85[v565 + 1 + 0] = v566;
								v85[v565] = v566[v87[4 + 0]];
								break;
							end
							if ((2842 < 4835) and (3706 >= 2393) and (v564 == (1545 - (320 + 1225)))) then
								v565 = v87[2];
								v566 = v85[v87[5 - (4 - 2)]];
								v564 = 1 + 0;
							end
						end
					end
				elseif (v88 <= (1528 - (157 + 1307))) then
					if ((1756 < 3743) and (v88 <= (1912 - (821 + (3182 - 2144))))) then
						if ((v88 <= (117 - (753 - (232 + 451)))) or (1429 >= 3843)) then
							if (v88 <= (5 + 38 + 1)) then
								if ((2598 <= 3220) and (v88 > ((67 + 8) - 32))) then
									local v295 = 0 + 0;
									while true do
										if ((v295 == (0 - 0)) or (2629 > 3045)) then
											v85[v87[2]] = v85[v87[3]][v87[1030 - (834 + 192)]];
											v79 = v79 + 1 + 0;
											v87 = v75[v79];
											v85[v87[2]] = v85[v87[1 + 2]][v87[1 + 3]];
											v295 = 1 - 0;
										end
										if ((v295 == ((870 - (510 + 54)) - (300 + 4))) or (4962 <= 3676)) then
											v87 = v75[v79];
											v85[v87[1 + 1]] = v85[v87[3]] - v85[v87[10 - (11 - 5)]];
											v79 = v79 + 1;
											v87 = v75[v79];
											v295 = 3;
										end
										if (v295 == 3) then
											v85[v87[364 - (112 + 250)]] = v85[v87[2 + 1]][v87[4]];
											v79 = v79 + (2 - 1);
											v87 = v75[v79];
											v85[v87[(38 - (13 + 23)) + 0]] = v85[v87[2 + 1]][v87[7 - 3]];
											v295 = 4;
										end
										if (v295 == 1) then
											v79 = v79 + 1 + (0 - 0);
											v87 = v75[v79];
											v85[v87[1 + 1]] = v85[v87[3 + 0]][v87[1418 - (1001 + 413)]];
											v79 = v79 + 1;
											v295 = 2;
										end
										if (v295 == (8 - 4)) then
											v79 = v79 + (1 - 0);
											v87 = v75[v79];
											v85[v87[(1972 - (830 + 258)) - (244 + 638)]] = v85[v87[696 - (627 + 66)]] - v85[v87[4]];
											v79 = v79 + ((6 - 4) - 1);
											v295 = 607 - (512 + 90);
										end
										if ((3447 >= 2905) and (v295 == (1911 - (1665 + 241)))) then
											v87 = v75[v79];
											v85[v87[2]] = v85[v87[720 - (373 + 344)]][v87[2 + 2]];
											v79 = v79 + 1 + 0;
											v87 = v75[v79];
											v295 = 15 - 9;
										end
										if ((6 == v295) or (3467 < 3261) or (2817 < 513)) then
											v85[v87[2 - 0]] = v85[v87[3]] * v85[v87[1103 - (35 + 1064)]];
											v79 = v79 + 1 + 0;
											v87 = v75[v79];
											v85[v87[2]] = v87[6 - 3];
											break;
										end
									end
								else
									v85[v87[1 + 1]] = v85[v87[3]] / v87[1240 - (187 + 111 + 938)];
								end
							elseif ((v88 <= 45) or (732 >= 2550)) then
								local v297 = v87[1261 - (199 + 34 + 1026)];
								local v298, v299 = v78(v85[v297](v85[v297 + (1667 - ((2077 - (860 + 581)) + 1030))]));
								v80 = (v299 + v297) - ((3 - 2) + 0);
								local v300 = 0;
								for v431 = v297, v80 do
									v300 = v300 + 1 + 0 + 0;
									v85[v431] = v298[v300];
								end
							elseif ((3089 > 164) and (v88 == (14 + 32))) then
								local v567 = v87[1 + 1];
								local v568, v569 = v78(v85[v567]());
								v80 = (v569 + v567) - 1;
								local v570 = 221 - (55 + 166);
								for v855 = v567, v80 do
									local v856 = 0;
									while true do
										if ((0 + 0) == v856) then
											v570 = v570 + (242 - (237 + 4)) + 0;
											v85[v855] = v568[v570];
											break;
										end
									end
								end
							else
								local v571 = v87[7 - 5];
								local v572 = v85[v571];
								for v857 = v571 + 1, v87[(705 - 405) - (36 + 261)] do
									v7(v572, v85[v857]);
								end
							end
						elseif ((1455 <= 3954) and (v88 <= (87 - 37))) then
							if (v88 <= (1416 - (34 + 1334))) then
								local v301;
								local v302;
								v85[v87[2]] = v85[v87[3]][v87[2 + 2]];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v302 = v87[1285 - (1035 + 248)];
								v301 = v85[v87[3]];
								v85[v302 + (22 - (20 + 1))] = v301;
								v85[v302] = v301[v87[4]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v302 = v87[2 + 0];
								v85[v302](v85[v302 + (320 - ((338 - 204) + 185))]);
								v79 = v79 + (1134 - ((1040 - 491) + 584));
								v87 = v75[v79];
								v302 = v87[2];
								v301 = v85[v87[688 - (314 + 371)]];
								v85[v302 + (3 - 2)] = v301;
								v85[v302] = v301[v87[4]];
								v79 = v79 + (969 - (392 + 86 + 490));
								v87 = v75[v79];
								v302 = v87[2 + 0];
								v85[v302](v85[v302 + (1173 - (786 + 222 + 164))]);
								v79 = v79 + (3 - 2);
								v87 = v75[v79];
								v79 = v87[1382 - (1055 + (1223 - 899))];
							elseif ((150 == 150) and (1461 <= 2309) and (v88 == (1389 - (1093 + 247)))) then
								if ((v85[v87[2 + 0]] == v87[1 + 3]) or (4669 < 511)) then
									v79 = v79 + (3 - 2);
								else
									v79 = v87[2 + 1];
								end
							else
								local v573 = 0;
								local v574;
								while true do
									if (v573 == (0 - 0)) then
										v574 = v87[5 - 3];
										do
											return v85[v574](v13(v85, v574 + ((2 + 0) - 1), v87[2 + 1]));
										end
										break;
									end
								end
							end
						elseif ((3193 <= 3790) and (v88 <= (196 - 145))) then
							local v316 = v87[6 - 4];
							v85[v316](v13(v85, v316 + 1 + 0, v87[3]));
						elseif ((v88 > 52) or (4222 <= 1868)) then
							local v575 = 0 - 0;
							local v576;
							local v577;
							while true do
								if (v575 == (691 - (364 + 324))) then
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[5 - 3]][v87[6 - (1429 - (85 + 1341))]] = v87[2 + 2];
									v79 = v79 + (4 - 3);
									v87 = v75[v79];
									v575 = 5 - 1;
								end
								if (v575 == ((30 - 12) - 12)) then
									v79 = v79 + (1269 - (1249 + (53 - 34)));
									v87 = v75[v79];
									v85[v87[2 + 0]][v87[11 - 8]] = v85[v87[1090 - (686 + 400)]];
									break;
								end
								if (((3090 >= 102) and (((376 - (45 + 327)) + 0) == v575)) or (463 == 3491)) then
									v85[v87[(435 - 204) - (73 + 156)]] = {};
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[1 + 1]][v87[814 - (721 + 90)]] = v87[1 + 3];
									v79 = v79 + ((505 - (444 + 58)) - 2);
									v575 = 475 - (224 + 246);
								end
								if ((4153 > 1521) and (v575 == (8 - 3))) then
									v87 = v75[v79];
									v85[v87[(2 + 1) - (1 + 0)]][v87[1 + 1 + 1]] = v87[1 + 3];
									v79 = v79 + 1;
									v87 = v75[v79];
									v85[v87[5 - 3]][v87[3 + (1732 - (64 + 1668))]] = v87[7 - 3];
									v575 = 19 - 13;
								end
								if ((v575 == (515 - ((2176 - (1227 + 746)) + 310))) or (249 < 91)) then
									v87 = v75[v79];
									v85[v87[1995 - (1238 + 755)]][v87[1 + 2]] = v87[1538 - (709 + 825)];
									v79 = v79 + (1 - 0);
									v87 = v75[v79];
									v85[v87[2]][v87[3 - 0]] = v87[4];
									v575 = 867 - ((602 - 406) + (1239 - 571));
								end
								if ((2549 >= 2060) and (v575 == (0 - 0))) then
									v576 = nil;
									v577 = nil;
									v577 = v87[2];
									v576 = v85[v87[(499 - (415 + 79)) - 2]];
									v85[v577 + (834 - (171 + 662))] = v576;
									v575 = (3 + 91) - (4 + 89);
								end
								if (v575 == (3 - (493 - (142 + 349)))) then
									v85[v577] = v576[v87[2 + 1 + 1]];
									v79 = v79 + (4 - 3);
									v87 = v75[v79];
									v85[v87[1 + 1]] = {};
									v79 = v79 + (1487 - ((47 - 12) + 1451));
									v575 = (724 + 731) - (28 + 1425);
								end
							end
						else
							local v578;
							local v579;
							local v578, v580;
							local v581;
							local v582;
							v85[v87[1995 - (941 + 1052)]] = v85[v87[3 + 0 + 0]];
							v79 = v79 + (1515 - ((2238 - 1416) + 692));
							v87 = v75[v79];
							v85[v87[2 - 0]] = v64[v87[3]];
							v79 = v79 + 1 + 0;
							v87 = v75[v79];
							v85[v87[2]] = v64[v87[300 - ((1909 - (1710 + 154)) + 252)]];
							v79 = v79 + 1;
							v87 = v75[v79];
							v582 = v87[2 + 0];
							v581 = v85[v87[3]];
							v85[v582 + 1 + (318 - (200 + 118))] = v581;
							v85[v582] = v581[v87[(4 + 5) - (8 - 3)]];
							v79 = v79 + (434 - ((168 - 54) + 284 + 35));
							v87 = v75[v79];
							v85[v87[2 - (0 + 0)]] = v87[3 - 0];
							v79 = v79 + 1 + 0;
							v87 = v75[v79];
							v582 = v87[2 - (0 + 0)];
							v85[v582] = v85[v582](v13(v85, v582 + (1 - 0), v87[1966 - (556 + 1407)]));
							v79 = v79 + (1207 - (741 + 465));
							v87 = v75[v79];
							v582 = v87[467 - (170 + 295)];
							v581 = v85[v87[2 + 1]];
							v85[v582 + 1 + 0 + 0] = v581;
							v85[v582] = v581[v87[8 - 4]];
							v79 = v79 + 1;
							v87 = v75[v79];
							v582 = v87[1252 - (363 + 887)];
							v578, v580 = v78(v85[v582](v85[v582 + (2 - 1)]));
							v80 = (v580 + v582) - ((1 - 0) + 0);
							v579 = (0 - 0) + 0;
							for v858 = v582, v80 do
								v579 = v579 + 1 + 0;
								v85[v858] = v578[v579];
							end
							v79 = v79 + (1231 - (957 + 273));
							v87 = v75[v79];
							v582 = v87[1 + 1];
							v578 = {v85[v582](v13(v85, v582 + (3 - 2), v80))};
							v579 = 0 - 0;
							for v861 = v582, v87[4] do
								v579 = v579 + ((1 + 1) - 1);
								v85[v861] = v578[v579];
							end
							v79 = v79 + (4 - 3);
							v87 = v75[v79];
							v79 = v87[3];
						end
					elseif (v88 <= (1838 - (389 + (3254 - 1863)))) then
						if ((v88 <= (35 + 20)) or (4612 == 1807)) then
							if (v88 > 54) then
								if (v85[v87[1 + 1]] < v85[v87[8 - 4]]) then
									v79 = v79 + (952 - (783 + 168));
								else
									v79 = v87[9 - 6];
								end
							else
								v85[v87[2 + 0]][v87[3]] = v87[315 - (212 + 97 + (1666 - (674 + 990)))];
								v79 = v79 + (2 - 1);
								v87 = v75[v79];
								v85[v87[1214 - (1090 + 122)]][v87[1 + 2]] = v87[13 - 9];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[1 + 1 + 0]][v87[3]] = v87[2 + 2];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[2]][v87[3]] = v85[v87[1122 - (628 + 490)]];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v85[v87[4 - 2]][v87[13 - 10]] = v87[778 - ((682 - 251) + 343)];
								v79 = v79 + (1 - 0);
								v87 = v75[v79];
								v85[v87[5 - 3]] = {};
								v79 = v79 + (1056 - (507 + 548));
								v87 = v75[v79];
								v85[v87[839 - (289 + 548)]][v87[3 + (1818 - (821 + 997))]] = v87[1 + 3];
								v79 = v79 + (1696 - (556 + 1139));
								v87 = v75[v79];
								v85[v87[17 - (6 + 9)]][v87[1 + 2]] = v87[3 + 1];
								v79 = v79 + (170 - (28 + 141));
								v87 = v75[v79];
								v85[v87[1 + 1]][v87[3 - 0]] = v87[4];
								v79 = v79 + (256 - (195 + 60));
								v87 = v75[v79];
								v85[v87[2 + 0]][v87[(355 + 965) - (486 + 831)]] = v87[10 - 6];
							end
						elseif (v88 <= (1557 - (251 + 1250))) then
							local v337 = v87[6 - 4];
							v85[v337] = v85[v337](v13(v85, v337 + 1 + 0, v87[9 - 6]));
						elseif (v88 == 57) then
							if (v87[2] == v85[v87[4]]) then
								v79 = v79 + (1264 - (668 + 595));
							else
								v79 = v87[3 + 0];
							end
						else
							local v606 = v87[1 + 1];
							local v607 = {};
							for v864 = 1, #v84 do
								local v865 = v84[v864];
								for v902 = 0 - 0, #v865 do
									local v903 = (849 - 559) - (23 + 184 + 83);
									local v904;
									local v905;
									local v906;
									while true do
										if ((633 <= 4454) and (v903 == (1945 - (1129 + 815)))) then
											v906 = v904[389 - ((1403 - (809 + 223)) + 16)];
											if ((3991 >= 3174) and (((v905 == v85) and (v906 >= v606)) or (2328 < 377))) then
												v607[v906] = v905[v906];
												v904[1751 - (1326 + 424)] = v607;
											end
											break;
										end
										if (v903 == 0) then
											v904 = v865[v902];
											v905 = v904[1];
											v903 = 1 - (0 - 0);
										end
									end
								end
							end
						end
					elseif ((v88 <= (222 - 161)) or (3284 <= 1801)) then
						if ((4219 <= 4301) and (v88 <= (177 - (88 + 30)))) then
							local v339 = v87[774 - ((2162 - 1442) + 51)];
							local v340 = v85[v339];
							for v434 = v339 + (2 - 1), v87[1780 - (421 + 1355)] do
								v340 = v340 .. v85[v434];
							end
							v85[v87[2 - 0]] = v340;
						elseif (v88 == (30 + 30)) then
							local v608 = 0;
							local v609;
							local v610;
							while true do
								if (((3247 == 3247) and (v608 == (1086 - (286 + 797)))) or (3760 < 241)) then
									v85[v610] = v609[v87[14 - 10]];
									v79 = v79 + (1 - 0);
									v87 = v75[v79];
									v85[v87[(1458 - 1017) - (397 + 42)]] = {};
									v608 = 2 + 2;
								end
								if (v608 == ((594 + 212) - (24 + 776))) then
									v85[v87[2 - 0]][v87[2 + 1]] = v87[4];
									break;
								end
								if ((1372 < 3989) and (v608 == 1)) then
									v87 = v75[v79];
									v610 = v87[787 - ((839 - (14 + 603)) + 563)];
									v85[v610] = v85[v610](v13(v85, v610 + (1 - (129 - (118 + 11))), v87[3 + 0]));
									v79 = v79 + (191 - (23 + 28 + 139));
									v608 = 1800 - (690 + 923 + 185);
								end
								if ((3776 >= 1834) and (v608 == (2 + 2))) then
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v85[v87[850 - (40 + 808)]][v87[1 + 2]] = v87[15 - (31 - 20)];
									v79 = v79 + 1 + 0;
									v608 = 3 + 2;
								end
								if ((2 == v608) or (1590 <= 1014)) then
									v87 = v75[v79];
									v610 = v87[2 + 0];
									v609 = v85[v87[574 - (47 + 524)]];
									v85[v610 + 1 + 0] = v609;
									v608 = 8 - 5;
								end
								if ((v608 == (7 - 2)) or (1029 >= 2232)) then
									v87 = v75[v79];
									v85[v87[951 - (551 + 398)]][v87[6 - 3]] = v87[1730 - (1165 + 561)];
									v79 = v79 + 1 + 0;
									v87 = v75[v79];
									v608 = 18 - 12;
								end
								if (v608 == (0 + 0)) then
									v609 = nil;
									v610 = nil;
									v85[v87[481 - (341 + 138)]][v87[1 + 0 + 2]] = v85[v87[7 - (2 + 1)]];
									v79 = v79 + (327 - (89 + 237));
									v608 = 3 - (2 + 0);
								end
							end
						else
							local v611 = 0 - 0;
							local v612;
							while true do
								if (v611 == (886 - (581 + 300))) then
									v79 = v79 + (1221 - (855 + 365));
									v87 = v75[v79];
									v85[v87[4 - 2]] = v85[v87[3]][v87[2 + 2]];
									v611 = 1241 - ((3830 - 2800) + 205);
								end
								if ((((4 - 2) + 0) == v611) or (1843 >= 4176)) then
									v87 = v75[v79];
									v85[v87[2 + 0]] = v85[v87[289 - (156 + 130)]][v87[8 - 4]];
									v79 = v79 + (1 - 0);
									v611 = 5 - 2;
								end
								if (v611 == 0) then
									v612 = nil;
									v85[v87[2]] = v85[v87[1 + 2]][v87[3 + 1]];
									v79 = v79 + (70 - (10 + 59));
									v611 = 1;
								end
								if ((v611 == (2 + 4)) or (685 > 4725)) then
									v79 = v79 + (4 - 3);
									v87 = v75[v79];
									v85[v87[1165 - (671 + 492)]] = v63[v87[3 + 0]];
									v611 = 7;
								end
								if (v611 == (1219 - (369 + 846))) then
									v79 = v79 + 1 + 0 + 0;
									v87 = v75[v79];
									v85[v87[2 + 0]] = v85[v87[1948 - (1036 + 909)]] - v85[v87[4]];
									v611 = 4 + 1;
								end
								if ((v611 == (4 - 1)) or (1284 >= 3991)) then
									v87 = v75[v79];
									v612 = v87[205 - (11 + 192)];
									v85[v612] = v85[v612](v13(v85, v612 + 1 + 0, v87[178 - (135 + 40)]));
									v611 = (35 - 26) - (2 + 3);
								end
								if ((v611 == (5 + 2)) or (4187 <= 3305)) then
									v79 = v79 + (2 - 1);
									v87 = v75[v79];
									if (v85[v87[2]] > v85[v87[5 - 1]]) then
										v79 = v79 + 1;
									else
										v79 = v79 + v87[179 - (50 + 126)];
									end
									break;
								end
								if ((3162 == 3162) and (1091 == 1091) and ((2 - 1) == v611)) then
									v87 = v75[v79];
									v85[v87[1 + 1]] = v85[v87[1416 - (1233 + 180)]][v87[973 - (522 + 447)]];
									v79 = v79 + 1;
									v611 = 1423 - (107 + 1314);
								end
							end
						end
					elseif (v88 <= (29 + 33)) then
						local v342 = v87[5 - 3];
						v85[v342] = v85[v342](v13(v85, v342 + 1 + 0, v80));
					elseif (((3782 < 3851) and (v88 > (124 - 61))) or (4195 == 3247)) then
						v85[v87[7 - 5]] = v85[v87[1913 - (716 + 1194)]] * v87[1 + 3];
					else
						v85[v87[1 + (90 - (40 + 49))]] = v85[v87[3]] - v87[507 - (74 + (1633 - 1204))];
					end
				elseif (v88 <= (144 - 69)) then
					if ((v88 <= 69) or (3761 < 2103)) then
						if (v88 <= (33 + (523 - (99 + 391)))) then
							if ((v88 > (148 - 83)) or (4212 <= 98)) then
								local v344;
								local v345;
								v85[v87[2]][v87[3 + 0]] = v85[v87[(10 + 2) - 8]];
								v79 = v79 + (2 - 1);
								v87 = v75[v79];
								v345 = v87[435 - (279 + 154)];
								v85[v345] = v85[v345](v13(v85, v345 + (779 - (454 + 324)), v87[3 + (0 - 0)]));
								v79 = v79 + 1;
								v87 = v75[v79];
								v345 = v87[19 - ((29 - 17) + 5)];
								v344 = v85[v87[2 + 0 + 1]];
								v85[v345 + (2 - 1)] = v344;
								v85[v345] = v344[v87[2 + 2]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[1095 - (277 + 816)]] = {};
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[8 - 6]][v87[1186 - (1058 + 125)]] = v87[1 + 3];
								v79 = v79 + (2 - 1);
								v87 = v75[v79];
								v85[v87[2]][v87[978 - (815 + (1764 - (1032 + 572)))]] = v87[4];
								v79 = v79 + (4 - 3);
								v87 = v75[v79];
								v85[v87[2]][v87[3]] = v87[9 - 5];
							elseif (v85[v87[1 + 1]] > v85[v87[11 - 7]]) then
								v79 = v79 + (1899 - (41 + 1857));
							else
								v79 = v79 + v87[1896 - (1222 + 671)];
							end
						elseif ((654 < 2945) and (v88 <= (173 - 106))) then
							if (v85[v87[2]] or (2370 == 4556)) then
								v79 = v79 + (1 - 0);
							else
								v79 = v87[1185 - (229 + 953)];
							end
						elseif ((2486 <= 3406) and (677 <= 1197) and (v88 > ((2259 - (203 + 214)) - (1111 + 663)))) then
							local v616 = v87[2];
							v85[v616](v85[v616 + (1580 - (874 + 705))]);
						else
							local v617;
							local v618;
							v618 = v87[1 + 1];
							v617 = v85[v87[3 + 0]];
							v85[v618 + (1 - 0)] = v617;
							v85[v618] = v617[v87[1 + 3]];
							v79 = v79 + (680 - (642 + 37));
							v87 = v75[v79];
							v85[v87[1 + 1]] = v87[1 + 2];
							v79 = v79 + (2 - 1);
							v87 = v75[v79];
							v618 = v87[(2273 - (568 + 1249)) - (233 + 221)];
							v85[v618] = v85[v618](v13(v85, v618 + (2 - 1), v87[3 + 0]));
							v79 = v79 + (1542 - (718 + 823));
							v87 = v75[v79];
							v85[v87[2 + 0 + 0]] = v85[v87[808 - (266 + 539)]];
							v79 = v79 + (2 - 1);
							v87 = v75[v79];
							if (v85[v87[1227 - (636 + 589)]] or (514 >= 2311)) then
								v79 = v79 + (2 - 1);
							else
								v79 = v87[5 - 2];
							end
						end
					elseif ((3950 == 3950) and (v88 <= (58 + 14))) then
						if (v88 <= 70) then
							v64[v87[2 + 1]] = v85[v87[1017 - (657 + 358)]];
						elseif ((2594 > 1455) and (v88 > 71)) then
							local v630;
							local v631;
							local v632;
							local v633;
							local v634;
							local v635;
							local v636;
							v85[v87[4 - 2]][v87[6 - 3]] = v85[v87[1191 - (1151 + 36)]];
							v79 = v79 + 1 + (0 - 0);
							v87 = v75[v79];
							v636 = v87[1 + 1];
							v85[v636] = v85[v636](v13(v85, v636 + (2 - 1), v87[11 - 8]));
							v79 = v79 + (1833 - (1552 + (1586 - (913 + 393))));
							v87 = v75[v79];
							v636 = v87[836 - (64 + 770)];
							v635 = v85[v87[(8 - 5) + 0]];
							v85[v636 + (2 - 1)] = v635;
							v85[v636] = v635[v87[1 + 3]];
							v79 = v79 + (1244 - ((221 - 64) + 1086));
							v87 = v75[v79];
							v85[v87[2]] = {};
							v79 = v79 + (1 - 0);
							v87 = v75[v79];
							v85[v87[2]][v87[13 - 10]] = v87[(415 - (269 + 141)) - 1];
							v79 = v79 + (1 - 0);
							v87 = v75[v79];
							v85[v87[(1825 - 1004) - (599 + 220)]][v87[(1986 - (362 + 1619)) - 2]] = v87[1935 - (1813 + (1743 - (950 + 675)))];
							v79 = v79 + 1;
							v87 = v75[v79];
							v636 = v87[2 + 0];
							v85[v636] = v85[v636](v13(v85, v636 + (1218 - (841 + 376)), v87[3 - 0]));
							v79 = v79 + 1 + 0;
							v87 = v75[v79];
							v636 = v87[2];
							v634 = {};
							for v866 = 2 - 1, #v84 do
								local v867 = 859 - (464 + 395);
								while true do
									if (v867 == (0 - 0)) then
										v633 = v84[v866];
										for v1114 = 0, #v633 do
											v632 = v633[v1114];
											v631 = v632[1 + 0];
											v630 = v632[2];
											if ((4545 > 4248) and (v631 == v85) and (v630 >= v636)) then
												v634[v630] = v631[v630];
												v632[838 - (467 + 143 + 227)] = v634;
											end
										end
										break;
									end
								end
							end
							v79 = v79 + (1 - 0);
							v87 = v75[v79];
							do
								return;
							end
						else
							local v653;
							local v654;
							v85[v87[2]][v87[3 + 0]] = v85[v87[4]];
							v79 = v79 + (3 - 2);
							v87 = v75[v79];
							v654 = v87[2];
							v85[v654] = v85[v654](v13(v85, v654 + (1180 - (216 + 963)) + (1287 - (485 + 802)), v87[6 - (562 - (432 + 127))]));
							v79 = v79 + (521 - (150 + 370));
							v87 = v75[v79];
							v654 = v87[1284 - (74 + 1208)];
							v653 = v85[v87[7 - 4]];
							v85[v654 + (4 - 3)] = v653;
							v85[v654] = v653[v87[(1076 - (1065 + 8)) + 1]];
							v79 = v79 + 1;
							v87 = v75[v79];
							v85[v87[392 - (8 + 6 + 376)]] = {};
							v79 = v79 + (1 - 0);
							v87 = v75[v79];
							v85[v87[2 + 0]][v87[3 + 0]] = v87[4];
							v79 = v79 + 1 + 0;
							v87 = v75[v79];
							v85[v87[5 - 3]][v87[3]] = v87[4 + 0];
							v79 = v79 + ((1680 - (635 + 966)) - (23 + 55));
							v87 = v75[v79];
							v85[v87[4 - 2]][v87[3 + 0]] = v87[4 + 0];
						end
					elseif ((4848 >= 141) and (v88 <= ((81 + 31) - 39))) then
						local v364 = 0 + (42 - (5 + 37));
						local v365;
						local v366;
						local v367;
						while true do
							if (v364 == 1) then
								v85[v87[2]] = v87[904 - (652 + (618 - 369))];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v367 = v87[2];
								v85[v367] = v85[v367](v85[v367 + 1]);
								v79 = v79 + 1;
								v364 = 5 - 3;
							end
							if (v364 == 5) then
								v87 = v75[v79];
								v85[v87[2]] = v87[1871 - (708 + 1160)];
								break;
							end
							if ((1691 == 1691) and (3538 < 3871) and (4 == v364)) then
								for v908 = v366 + 1, v87[4] do
									v365 = v365 .. v85[v908];
								end
								v85[v87[5 - 3]] = v365;
								v79 = v79 + (1 - (0 - 0));
								v87 = v75[v79];
								v85[v87[29 - (10 + 17)]][v87[3]] = v85[v87[1 + 0 + 3]];
								v79 = v79 + 1;
								v364 = 1737 - (1400 + 332);
							end
							if (v364 == (3 - 1)) then
								v87 = v75[v79];
								v85[v87[7 - 5]] = v85[v87[5 - 2]];
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[1910 - (242 + 1666)]] = v87[2 + (1 - 0)];
								v79 = v79 + 1 + 0;
								v364 = 3 + (0 - 0);
							end
							if ((3810 > 3164) and (v364 == ((676 + 264) - (850 + 90)))) then
								v365 = nil;
								v366 = nil;
								v367 = nil;
								v85[v87[2]] = v85[v87[4 - 1]][v87[4]];
								v79 = v79 + (1391 - (360 + 1030));
								v87 = v75[v79];
								v364 = 1;
							end
							if ((2557 <= 2601) and ((3 + 0) == v364)) then
								v87 = v75[v79];
								v85[v87[5 - 3]] = v85[v87[3 - 0]][v87[1665 - (909 + 752)]];
								v79 = v79 + (1224 - (109 + (1643 - (318 + 211))));
								v87 = v75[v79];
								v366 = v87[3];
								v365 = v85[v366];
								v364 = 4;
							end
						end
					elseif (((2318 > 1082) and (v88 > 74)) or (763 > 4143)) then
						local v670 = 0;
						local v671;
						local v672;
						while true do
							if ((v670 == (3 - 1)) or (3285 >= 3449)) then
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v672 = v87[2];
								v670 = 14 - 11;
							end
							if (3 == v670) then
								v671 = v85[v87[3]];
								v85[v672 + (243 - (6 + 236))] = v671;
								v85[v672] = v671[v87[4]];
								v670 = 3 + 1;
							end
							if ((v670 == (0 + 0)) or (525 > 1349)) then
								v671 = nil;
								v672 = nil;
								v85[v87[4 - 2]] = v63[v87[4 - 1]];
								v670 = 1134 - ((2663 - (963 + 624)) + 57);
							end
							if ((1223 == 1223) and (v670 == 4)) then
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v672 = v87[691 - (579 + 110)];
								v670 = 1 + 4;
							end
							if (v670 == (5 + 0)) then
								v85[v672](v85[v672 + 1]);
								v79 = v79 + 1 + 0 + 0;
								v87 = v75[v79];
								v670 = 413 - (174 + 233);
							end
							if ((v670 == 1) or (3810 >= 4154)) then
								v79 = v79 + ((848 - (518 + 328)) - 1);
								v87 = v75[v79];
								v85[v87[3 - 1]] = v85[v87[2 + 1]][v87[1178 - (663 + (1191 - 680))]];
								v670 = 2 + 0;
							end
							if (v670 == (2 + 4)) then
								v85[v87[5 - (3 - 0)]] = v87[2 + 1];
								break;
							end
						end
					else
						local v673;
						v85[v87[4 - 2]] = v85[v87[(324 - (301 + 16)) - 4]][v87[4]];
						v79 = v79 + 1 + 0;
						v87 = v75[v79];
						v85[v87[3 - 1]] = v85[v87[3 + (0 - 0)]] * v87[1 + 3];
						v79 = v79 + (723 - (478 + 244));
						v87 = v75[v79];
						v85[v87[(1457 - 938) - (440 + 77)]] = v85[v87[(5 - 3) + 1]] * v87[14 - 10];
						v79 = v79 + ((1411 + 146) - (655 + 901));
						v87 = v75[v79];
						v673 = v87[1 + 1];
						v85[v673] = v85[v673](v13(v85, v673 + 1 + 0, v87[2 + 1 + 0]));
						v79 = v79 + 1;
						v87 = v75[v79];
						v85[v87[7 - 5]] = v85[v87[1448 - (695 + 750)]];
						v79 = v79 + (3 - 2);
						v87 = v75[v79];
						v85[v87[2]] = v64[v87[3 - 0]];
						v79 = v79 + (3 - 2);
						v87 = v75[v79];
						v85[v87[353 - (285 + (140 - 74))]] = v85[v87[6 - 3]][v87[1314 - (682 + 378 + 250)]];
						v79 = v79 + 1 + 0;
						v87 = v75[v79];
						v85[v87[(29 + 272) - (176 + 123)]] = v85[v87[3]][v87[4]];
						v79 = v79 + 1 + 0;
						v87 = v75[v79];
						v85[v87[2 + 0]] = v85[v87[272 - (239 + 30)]][v87[2 + 2]];
						v79 = v79 + 1 + 0;
						v87 = v75[v79];
						v85[v87[3 - 1]] = v85[v87[8 - (15 - 10)]] / v87[319 - (99 + 207 + 9)];
						v79 = v79 + 1;
						v87 = v75[v79];
						v85[v87[6 - 4]] = v85[v87[1 + 2]] - v85[v87[3 + 1]];
						v79 = v79 + 1 + 0;
						v87 = v75[v79];
						v85[v87[5 - 3]] = v85[v87[1378 - (1140 + 235)]][v87[(1022 - (829 + 190)) + 1]];
						v79 = v79 + 1 + 0;
						v87 = v75[v79];
						v85[v87[1 + 1]] = v85[v87[(196 - 141) - (33 + 19)]][v87[(2 - 0) + 2]];
						v79 = v79 + (2 - 1);
						v87 = v75[v79];
						v85[v87[1 + 1]] = v85[v87[(6 - 1) - 2]] / v87[4 + (0 - 0)];
						v79 = v79 + (690 - (139 + 447 + 103));
						v87 = v75[v79];
						v85[v87[2]] = v85[v87[1 + 2]] - v85[v87[12 - (3 + 5)]];
						v79 = v79 + (1489 - (1309 + 179));
						v87 = v75[v79];
						v673 = v87[2 - 0];
						v85[v673] = v85[v673](v13(v85, v673 + 1 + 0, v87[7 - 4]));
						v79 = v79 + 1 + 0;
						v87 = v75[v79];
						v85[v87[3 - 1]] = v85[v87[5 - (5 - 3)]];
						v79 = v79 + (610 - (295 + 314));
						v87 = v75[v79];
						v85[v87[4 - 2]] = v87[3];
					end
				elseif (v88 <= (2042 - (1300 + 662))) then
					if (((2423 == 2423) and (v88 <= (241 - 164))) or (2957 < 2517)) then
						if ((687 < 4117) and (v88 == (72 + 4))) then
							local v368;
							local v369;
							v369 = v87[1757 - ((1791 - (520 + 93)) + 577)];
							v85[v369] = v85[v369](v13(v85, v369 + 1 + 0, v87[8 - 5]));
							v79 = v79 + (1406 - (851 + 554));
							v87 = v75[v79];
							v85[v87[2 + 0]] = v64[v87[8 - 5]];
							v79 = v79 + 1;
							v87 = v75[v79];
							v369 = v87[2];
							v368 = v85[v87[6 - 3]];
							v85[v369 + 1] = v368;
							v85[v369] = v368[v87[306 - (115 + 187)]];
							v79 = v79 + 1 + 0;
							v87 = v75[v79];
							v85[v87[2 + 0]] = v87[11 - 8];
							v79 = v79 + 1;
							v87 = v75[v79];
							v369 = v87[2];
							v85[v369] = v85[v369](v13(v85, v369 + (1162 - (160 + 1001)), v87[3]));
							v79 = v79 + (277 - (259 + 17));
							v87 = v75[v79];
							v85[v87[2]] = v64[v87[1 + 2 + 0]];
							v79 = v79 + 1 + 0;
							v87 = v75[v79];
							if not v85[v87[3 - (1 + 0)]] then
								v79 = v79 + (359 - (237 + 121));
							else
								v79 = v87[900 - (525 + 372)];
							end
						else
							local v382 = v87[(10 - 7) - 1];
							v85[v382] = v85[v382](v85[v382 + (3 - 2)]);
						end
					elseif (v88 <= (220 - (96 + 46))) then
						v85[v87[779 - ((1234 - (396 + 195)) + 134)]] = v63[v87[3]];
					elseif (v88 > (29 + 50)) then
						local v700 = 0;
						local v701;
						while true do
							if ((292 == 292) and (v700 == (2 - 1))) then
								v85[v87[2]] = v87[3];
								v79 = v79 + ((8 - 5) - 2);
								v87 = v75[v79];
								v701 = v87[2 + 0];
								v700 = 3 - 1;
							end
							if (v700 == (3 - (1762 - (440 + 1321)))) then
								v85[v701] = v85[v701](v13(v85, v701 + (720 - (316 + 403)), v87[(1831 - (1059 + 770)) + 1]));
								v79 = v79 + (2 - 1);
								v87 = v75[v79];
								v85[v87[2]][v87[2 + 1]] = v85[v87[9 - 5]];
								v700 = (13 - 10) + (545 - (424 + 121));
							end
							if ((1 + 0 + 2) == v700) then
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[1349 - (641 + 706)]][v87[10 - 7]] = v87[19 - 15];
								break;
							end
							if (0 == v700) then
								v701 = nil;
								v85[v87[2]] = v87[5 - 2];
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v700 = 1 - 0;
							end
						end
					else
						v85[v87[1 + 1]] = v64[v87[8 - 5]];
					end
				elseif ((4712 >= 3813) and (v88 <= 83)) then
					if (v88 <= (98 - (12 + 5))) then
						local v386;
						local v387;
						v85[v87[(3 + 4) - 5]][v87[5 - 2]] = v85[v87[8 - 4]];
						v79 = v79 + (2 - (441 - (249 + 191)));
						v87 = v75[v79];
						v387 = v87[1 + 1];
						v85[v387] = v85[v387](v13(v85, v387 + 1, v87[1976 - (1656 + 317)]));
						v79 = v79 + 1;
						v87 = v75[v79];
						v387 = v87[2 + 0];
						v386 = v85[v87[3 + 0]];
						v85[v387 + 1] = v386;
						v85[v387] = v386[v87[(43 - 33) - 6]];
						v79 = v79 + (4 - 3);
						v87 = v75[v79];
						v85[v87[2]] = v87[357 - (5 + 349)];
						v79 = v79 + (4 - 3);
						v87 = v75[v79];
						v387 = v87[2];
						v85[v387] = v85[v387](v13(v85, v387 + (1272 - (119 + 147 + (3873 - 2868))), v87[2 + 1]));
						v79 = v79 + 1;
						v87 = v75[v79];
						v387 = v87[6 - 4];
						v386 = v85[v87[3 - 0]];
						v85[v387 + 1] = v386;
						v85[v387] = v386[v87[1700 - (561 + 1135)]];
						v79 = v79 + (1 - 0);
						v87 = v75[v79];
						v85[v87[2]] = {};
						v79 = v79 + (428 - (183 + 244));
						v87 = v75[v79];
						v85[v87[2]][v87[(1 + 8) - (736 - (434 + 296))]] = v87[4];
						v79 = v79 + (1067 - (507 + 559));
						v87 = v75[v79];
						v85[v87[4 - 2]] = v64[v87[3]];
						v79 = v79 + (3 - 2);
						v87 = v75[v79];
						v85[v87[390 - (212 + 176)]] = v85[v87[908 - (250 + 655)]][v87[10 - 6]];
					elseif (v88 == (142 - 60)) then
						local v704 = 0 - (0 - 0);
						local v705;
						local v706;
						while true do
							if (v704 == (1962 - (1869 + 87))) then
								v85[v87[6 - 4]] = v85[v87[1904 - (484 + 1417)]];
								v79 = v79 + (2 - (513 - (169 + 343)));
								v87 = v75[v79];
								v85[v87[2 - 0]] = v87[3];
								break;
							end
							if ((1826 == 1826) and ((773 - (48 + 725)) == v704)) then
								v705 = nil;
								v706 = nil;
								v85[v87[2 - 0]] = v63[v87[7 - 4]];
								v79 = v79 + 1;
								v704 = 1 + 0;
							end
							if ((4270 > 1575) and ((v704 == 3) or (153 == 2063))) then
								v79 = v79 + 1;
								v87 = v75[v79];
								v85[v87[2]] = v85[v87[(7 + 0) - 4]];
								v79 = v79 + 1 + 0;
								v704 = 2 + 2;
							end
							if ((v704 == (854 - (152 + 701))) or (2584 == 3247)) then
								v87 = v75[v79];
								v706 = v87[1313 - (430 + 881)];
								v705 = v85[v87[(3 - 1) + (2 - 1)]];
								v85[v706 + (896 - (457 + 100 + 338))] = v705;
								v704 = 1 + (2 - 1);
							end
							if ((v704 == 4) or (1755 <= 693)) then
								v87 = v75[v79];
								v85[v87[5 - 3]] = v85[v87[10 - 7]];
								v79 = v79 + (2 - 1);
								v87 = v75[v79];
								v704 = 10 - 5;
							end
							if (v704 == 2) then
								v85[v706] = v705[v87[805 - (499 + 302)]];
								v79 = v79 + (867 - (39 + 827));
								v87 = v75[v79];
								v85[v87[5 - 3]] = v85[v87[6 - 3]];
								v704 = 3;
							end
							if (v704 == (19 - 14)) then
								v706 = v87[2 - 0];
								v85[v706] = v85[v706](v13(v85, v706 + 1 + 0, v87[(1131 - (651 + 472)) - 5]));
								v79 = v79 + 1 + 0;
								v87 = v75[v79];
								v704 = 9 - 3;
							end
						end
					else
						local v707 = 104 - (103 + 1);
						local v708;
						local v709;
						local v710;
						while true do
							if ((2014 >= 125) and (3413 == 3413) and (v707 == (555 - (475 + 79)))) then
								v710 = {};
								v709 = v10({}, {__index=function(v1091, v1092)
									local v1093 = v710[v1092];
									return v1093[2 - 1][v1093[2 + 0]];
								end,__newindex=function(v1094, v1095, v1096)
									local v1097 = v710[v1095];
									v1097[3 - 2][v1097[2]] = v1096;
								end});
								v707 = 1 + 1;
							end
							if (v707 == 0) then
								v708 = v76[v87[3 + 0]];
								v709 = nil;
								v707 = 1504 - (1395 + 108);
							end
							if (v707 == ((3 + 2) - 3)) then
								for v1099 = 1205 - (7 + 1197), v87[4] do
									v79 = v79 + 1 + 0;
									local v1100 = v75[v79];
									if (v1100[1 + 0] == (323 - (27 + 292))) then
										v710[v1099 - (2 - 1)] = {v85,v1100[5 - 2]};
									else
										v710[v1099 - (1 - 0)] = {v63,v1100[6 - 3]};
									end
									v84[#v84 + 1 + 0] = v710;
								end
								v85[v87[1 + (484 - (397 + 86))]] = v29(v708, v709, v64);
								break;
							end
						end
					end
				elseif (v88 <= (165 - 81)) then
					local v409;
					v85[v87[1 + (877 - (423 + 453))]] = v85[v87[3]][v87[7 - 3]];
					v79 = v79 + 1 + 0;
					v87 = v75[v79];
					v85[v87[2]] = v87[1 + 2];
					v79 = v79 + 1;
					v87 = v75[v79];
					v409 = v87[1753 - (1414 + 337)];
					v85[v409] = v85[v409](v85[v409 + (1941 - (1642 + 298))]);
					v79 = v79 + 1;
					v87 = v75[v79];
					v85[v87[4 - 2]] = v85[v87[1 + 2]];
					v79 = v79 + (2 - 1);
					v87 = v75[v79];
					v85[v87[5 - 3]][v87[3]] = v85[v87[2 + 2]];
					v79 = v79 + 1 + 0;
					v87 = v75[v79];
					v85[v87[974 - (357 + 615)]] = v87[3];
				elseif ((v88 > 85) or (4591 <= 3060)) then
					v85[v87[1 + 1 + 0]] = v87[6 - 3] ~= 0;
				else
					local v712;
					v85[v87[2 + 0]] = v85[v87[3]][v87[8 - 4]];
					v79 = v79 + 1 + 0;
					v87 = v75[v79];
					v85[v87[1 + 1]] = v85[v87[2 + 0 + 1]][v87[1305 - (384 + 917)]];
					v79 = v79 + (698 - (128 + 569));
					v87 = v75[v79];
					v85[v87[2]] = v63[v87[1546 - (1407 + 136)]];
					v79 = v79 + (1888 - (687 + 958 + 242));
					v87 = v75[v79];
					v85[v87[1712 - (556 + 1031 + 123)]] = v64[v87[10 - 7]];
					v79 = v79 + ((1286 - (50 + 1140)) - (9 + 86));
					v87 = v75[v79];
					v85[v87[423 - (275 + 146)]] = v85[v87[3]][v87[1 + 0 + 3]];
					v79 = v79 + 1;
					v87 = v75[v79];
					v85[v87[2]] = v63[v87[(40 + 27) - (29 + 35)]];
					v79 = v79 + 1;
					v87 = v75[v79];
					v85[v87[8 - (1 + 5)]] = v85[v87[8 - 5]][v87[17 - 13]];
					v79 = v79 + 1 + 0;
					v87 = v75[v79];
					v85[v87[1014 - (53 + 959)]] = v85[v87[411 - (312 + 96)]][v87[4]];
					v79 = v79 + 1;
					v87 = v75[v79];
					v85[v87[3 - 1]] = v85[v87[(413 - 125) - (147 + 138)]];
					v79 = v79 + (900 - (813 + 86));
					v87 = v75[v79];
					v712 = v87[2];
					v85[v712] = v85[v712](v13(v85, v712 + 1 + 0, v87[4 - 1]));
					v79 = v79 + (493 - (18 + 474));
					v87 = v75[v79];
					v85[v87[2]][v87[2 + 1]] = v85[v87[12 - 8]];
					v79 = v79 + ((787 + 300) - (860 + 226));
					v87 = v75[v79];
					v79 = v87[306 - (121 + 182)];
				end
				v79 = v79 + (597 - (157 + 439));
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
